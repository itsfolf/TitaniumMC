From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Simon Gardling <titaniumtown@gmail.com>
Date: Thu, 31 Dec 2020 18:21:38 -0500
Subject: [PATCH] add dupes


diff --git a/src/main/java/me/titaniumtown/TitaniumConfig.java b/src/main/java/me/titaniumtown/TitaniumConfig.java
index 4166b163724f2cc4ceedf0f43f92510f4efc5c1b..cc128896477ae03f1d6fa1849094496a9bb9948e 100644
--- a/src/main/java/me/titaniumtown/TitaniumConfig.java
+++ b/src/main/java/me/titaniumtown/TitaniumConfig.java
@@ -155,9 +155,11 @@ public class TitaniumConfig {
 
     public static boolean allowSandDupe = false;
     public static boolean worldBorderChecks = true;
+    public static boolean allowAllDupes = false;
     private static void experimental() {
         allowSandDupe = getBoolean("settings.experimental.allow-sand-dupe", allowSandDupe);
         worldBorderChecks = getBoolean("settings.experimental.world-border-checks", worldBorderChecks);
+        allowAllDupes = getBoolean("settings.experimental.allow-all-dupes", allowAllDupes);
     }
 
     public static double WborderSize = 6.0E7D; // Vanilla 6.0E7D; Max: 4.294967294E9D // replacement for 6.0E7D
diff --git a/src/main/java/net/minecraft/server/PlayerConnection.java b/src/main/java/net/minecraft/server/PlayerConnection.java
index 30947e31981b5c44cfc73b7ef2f4803b32f4f038..4a7ddfdc0de02cc88536614e73326704254e7e70 100644
--- a/src/main/java/net/minecraft/server/PlayerConnection.java
+++ b/src/main/java/net/minecraft/server/PlayerConnection.java
@@ -935,55 +935,54 @@ public class PlayerConnection implements PacketListenerPlayIn {
 
     @Override
     public void a(PacketPlayInBEdit packetplayinbedit) {
-        // Paper start
-        ItemStack testStack = packetplayinbedit.getBook();
-        if (!server.isPrimaryThread() && !testStack.isEmpty() && testStack.getTag() != null) {
-            NBTTagList pageList = testStack.getTag().getList("pages", 8);
-            if (pageList.size() > 100) {
-                PlayerConnection.LOGGER.warn(this.player.getName() + " tried to send a book with too many pages");
-                net.pl3x.purpur.event.player.PlayerBookTooLargeEvent event = new net.pl3x.purpur.event.player.PlayerBookTooLargeEvent(player.getBukkitEntity(), testStack.asBukkitCopy()); if (event.shouldKickPlayer()) // Purpur
-                minecraftServer.scheduleOnMain(() -> this.disconnect("Book too large!"));
-                return;
-            }
-            long byteTotal = 0;
-            int maxBookPageSize = com.destroystokyo.paper.PaperConfig.maxBookPageSize;
-            double multiplier = Math.max(0.3D, Math.min(1D, com.destroystokyo.paper.PaperConfig.maxBookTotalSizeMultiplier));
-            long byteAllowed = maxBookPageSize;
-            for (int i = 0; i < pageList.size(); ++i) {
-                String testString = pageList.getString(i);
-                int byteLength = testString.getBytes(java.nio.charset.StandardCharsets.UTF_8).length;
-                if (byteLength > 256 * 4) {
-                    PlayerConnection.LOGGER.warn(this.player.getName() + " tried to send a book with with a page too large!");
-                    net.pl3x.purpur.event.player.PlayerBookTooLargeEvent event = new net.pl3x.purpur.event.player.PlayerBookTooLargeEvent(player.getBukkitEntity(), testStack.asBukkitCopy()); if (event.shouldKickPlayer()) // Purpur
+        if (!me.titaniumtown.TitaniumConfig.allowAllDupes) {
+            // Paper start
+            ItemStack testStack = packetplayinbedit.getBook();
+            if (!server.isPrimaryThread() && !testStack.isEmpty() && testStack.getTag() != null) {
+                NBTTagList pageList = testStack.getTag().getList("pages", 8);
+                if (pageList.size() > 100) {
+                    PlayerConnection.LOGGER.warn(this.player.getName() + " tried to send a book with too many pages");
                     minecraftServer.scheduleOnMain(() -> this.disconnect("Book too large!"));
                     return;
                 }
-                byteTotal += byteLength;
-                int length = testString.length();
-                int multibytes = 0;
-                if (byteLength != length) {
-                    for (char c : testString.toCharArray()) {
-                        if (c > 127) {
-                            multibytes++;
+                long byteTotal = 0;
+                int maxBookPageSize = com.destroystokyo.paper.PaperConfig.maxBookPageSize;
+                double multiplier = Math.max(0.3D, Math.min(1D, com.destroystokyo.paper.PaperConfig.maxBookTotalSizeMultiplier));
+                long byteAllowed = maxBookPageSize;
+                for (int i = 0; i < pageList.size(); ++i) {
+                    String testString = pageList.getString(i);
+                    int byteLength = testString.getBytes(java.nio.charset.StandardCharsets.UTF_8).length;
+                    if (byteLength > 256 * 4) {
+                        PlayerConnection.LOGGER.warn(this.player.getName() + " tried to send a book with with a page too large!");
+                        minecraftServer.scheduleOnMain(() -> this.disconnect("Book too large!"));
+                        return;
+                    }
+                    byteTotal += byteLength;
+                    int length = testString.length();
+                    int multibytes = 0;
+                    if (byteLength != length) {
+                        for (char c : testString.toCharArray()) {
+                            if (c > 127) {
+                                multibytes++;
+                            }
                         }
                     }
-                }
-                byteAllowed += (maxBookPageSize * Math.min(1, Math.max(0.1D, (double) length / 255D))) * multiplier;
+                    byteAllowed += (maxBookPageSize * Math.min(1, Math.max(0.1D, (double) length / 255D))) * multiplier;
 
-                if (multibytes > 1) {
-                    // penalize MB
-                    byteAllowed -= multibytes;
+                    if (multibytes > 1) {
+                        // penalize MB
+                        byteAllowed -= multibytes;
+                    }
                 }
-            }
 
-            if (byteTotal > byteAllowed) {
-                PlayerConnection.LOGGER.warn(this.player.getName() + " tried to send too large of a book. Book Size: " + byteTotal + " - Allowed:  "+ byteAllowed + " - Pages: " + pageList.size());
-                net.pl3x.purpur.event.player.PlayerBookTooLargeEvent event = new net.pl3x.purpur.event.player.PlayerBookTooLargeEvent(player.getBukkitEntity(), testStack.asBukkitCopy()); if (event.shouldKickPlayer()) // Purpur
-                minecraftServer.scheduleOnMain(() -> this.disconnect("Book too large!"));
-                return;
+                if (byteTotal > byteAllowed) {
+                    PlayerConnection.LOGGER.warn(this.player.getName() + " tried to send too large of a book. Book Size: " + byteTotal + " - Allowed:  "+ byteAllowed + " - Pages: " + pageList.size());
+                    minecraftServer.scheduleOnMain(() -> this.disconnect("Book too large!"));
+                    return;
+                }
             }
+            // Paper end
         }
-        // Paper end
         // CraftBukkit start
         if (this.lastBookTick + 20 > MinecraftServer.currentTick) {
             this.disconnect("Book edited too quickly!");
@@ -3012,7 +3011,11 @@ public class PlayerConnection implements PacketListenerPlayIn {
     // Paper end
 
     public final boolean isDisconnected() {
-        return (!this.player.joining && !this.networkManager.isConnected()) || this.processedDisconnect; // Paper
+        if (me.titaniumtown.TitaniumConfig.allowAllDupes) {
+            return !this.player.joining && !this.networkManager.isConnected(); // Titanium - re-add duplication bugs
+        } else {
+            return (!this.player.joining && !this.networkManager.isConnected()) || this.processedDisconnect; // Paper
+        }
     }
     // CraftBukkit end
 
